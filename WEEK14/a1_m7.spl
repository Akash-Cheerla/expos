loadi(16,29);
loadi(17,30);
loadi(4, 17);
loadi(5, 18);
loadi(63,13);
loadi(64,14);
loadi(65,7);
loadi(66,8);
loadi(22,35);
loadi(23,36);
loadi(2, 15);
loadi(3, 16);
loadi(84,69);
loadi(90,70);

PTBR = PAGE_TABLE_BASE + 20;
PTLR = 10;
//breakpoint;
//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";

[76*512] = [65 * 512 + 1];

[PROCESS_TABLE + 1*16 + 11] = 83;
[PROCESS_TABLE + 1*16 +12] = 0;
[PROCESS_TABLE + 1*16 +13] = 8*512;
[PROCESS_TABLE + 1*16 +14] = PTBR; 
[PROCESS_TABLE + 1*16 +15] = PTLR;
[PROCESS_TABLE + 1*16 +1] = 1;
[PROCESS_TABLE + 1*16 +4] = CREATED;
//breakpoint;


PTBR = PAGE_TABLE_BASE + 40;
PTLR = 10;

//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 85;
[PTBR+5] = "0110";
[PTBR+6] = 86;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 84;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 87;
[PTBR+17] = "0110";
[PTBR+18] = 88;
[PTBR+19] = "0110";

[87*512] = [84 * 512 + 1];

[PROCESS_TABLE + 2*16 + 11] = 89;
[PROCESS_TABLE + 2*16 +12] = 0;
[PROCESS_TABLE + 2*16 +13] = 8*512;
[PROCESS_TABLE + 2*16 +14] = PTBR; 
[PROCESS_TABLE + 2*16 +15] = PTLR;
[PROCESS_TABLE + 2*16 +1] = 2;
[PROCESS_TABLE + 2*16 +4] = CREATED;



PTBR = PAGE_TABLE_BASE + 60;
PTLR = 10;

//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 91;
[PTBR+5] = "0110";
[PTBR+6] = 92;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 90;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 93;
[PTBR+17] = "0110";
[PTBR+18] = 94;
[PTBR+19] = "0110";

[93*512] = [90 * 512 + 1];

[PROCESS_TABLE + 3*16 + 11] = 95;
[PROCESS_TABLE + 3*16 +12] = 0;
[PROCESS_TABLE + 3*16 +13] = 8*512;
[PROCESS_TABLE + 3*16 +14] = PTBR; 
[PROCESS_TABLE + 3*16 +15] = PTLR;
[PROCESS_TABLE + 3*16 +1] = 3;
[PROCESS_TABLE + 3*16 +4] = CREATED;


[PROCESS_TABLE + 4*16 +4] = TERMINATED;
[PROCESS_TABLE + 5*16 +4] = TERMINATED;
[PROCESS_TABLE + 6*16 +4] = TERMINATED;
[PROCESS_TABLE + 7*16 +4] = TERMINATED;
[PROCESS_TABLE + 8*16 +4] = TERMINATED;
[PROCESS_TABLE + 9*16 +4] = TERMINATED;
[PROCESS_TABLE + 10*16 +4] = TERMINATED;
[PROCESS_TABLE + 11*16 +4] = TERMINATED;
[PROCESS_TABLE + 12*16 +4] = TERMINATED;
[PROCESS_TABLE + 13*16 +4] = TERMINATED;
[PROCESS_TABLE + 14*16 +4] = TERMINATED;
[PROCESS_TABLE + 15*16 +4] = TERMINATED;

//breakpoint;
return;
